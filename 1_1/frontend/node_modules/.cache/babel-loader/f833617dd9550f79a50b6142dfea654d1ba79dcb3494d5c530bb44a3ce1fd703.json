{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\epizot22\\\\1_1\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, defer, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  //   if(data.isError){\n  //     return <p>{data.message}</p>\n  //   }\n  // const events = data.events;\n  // return <EventsList events={events} />;\n\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 32\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }, this);\n}\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadIvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return{isError:true , message:\"Could not fetch\"}\n    throw new Response(JSON.stringify({\n      message: 'Coud not fetch',\n      status: 500\n    }));\n    // return json({message:'Coud not fetch'},{status:500});\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadIvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","defer","Await","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadIvents","response","fetch","ok","Response","JSON","stringify","message","status","loader","$RefreshReg$"],"sources":["D:/React/epizot22/1_1/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData,defer, Await } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\nimport { Suspense } from \"react\";\r\n\r\nfunction EventsPage() {\r\n  const {events} = useLoaderData();\r\n//   if(data.isError){\r\n//     return <p>{data.message}</p>\r\n//   }\r\n  // const events = data.events;\r\n  // return <EventsList events={events} />;\r\n\r\n  return (<Suspense fallback ={<p>Loading ...</p>}>\r\n  <Await resolve={events}>\r\n    {(loadedEvents) => <EventsList events={loadedEvents}/>}\r\n  </Await>\r\n  </Suspense>\r\n);\r\n}\r\n\r\nexport default EventsPage;\r\nasync function loadIvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n        // return{isError:true , message:\"Could not fetch\"}\r\n        throw new Response(JSON.stringify({message:'Coud not fetch',status:500}));\r\n        // return json({message:'Coud not fetch'},{status:500});\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\nexport function loader() {\r\n  return defer({\r\n    events:loadIvents(),\r\n  })\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAACC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAC7D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAACC;EAAM,CAAC,GAAGT,aAAa,CAAC,CAAC;EAClC;EACA;EACA;EACE;EACA;;EAEA,oBAAQM,OAAA,CAACF,QAAQ;IAACM,QAAQ,eAAGJ,OAAA;MAAAK,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eAChDL,OAAA,CAACJ,KAAK;MAACc,OAAO,EAAEP,MAAO;MAAAE,QAAA,EACnBM,YAAY,iBAAKX,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEQ;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEb;AAACP,EAAA,CAdQD,UAAU;EAAA,QACAP,aAAa;AAAA;AAAAkB,EAAA,GADvBX,UAAU;AAgBnB,eAAeA,UAAU;AACzB,eAAeY,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACZ;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAACC,OAAO,EAAC,gBAAgB;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC,CAAC;IACzE;EACN,CAAC,MAAM;IACL,OAAOP,QAAQ;EACjB;AACF;AACA,OAAO,SAASQ,MAAMA,CAAA,EAAG;EACvB,OAAO3B,KAAK,CAAC;IACXQ,MAAM,EAACU,UAAU,CAAC;EACpB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}