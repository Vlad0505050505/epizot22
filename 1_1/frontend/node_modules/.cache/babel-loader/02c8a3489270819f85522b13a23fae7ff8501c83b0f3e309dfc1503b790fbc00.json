{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\epizot22\\\\1_1\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsDetailPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n_s(EventsDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsDetailPage;\nexport default EventsDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.id;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  console.log(response);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Coud not fetch',\n      status: 500\n    }));\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsDetailPage\");","map":{"version":3,"names":["useLoaderData","EventItem","jsxDEV","_jsxDEV","EventsDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","response","fetch","console","log","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["D:/React/epizot22/1_1/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventsDetailPage(){\r\n    const data = useLoaderData();\r\n    return <EventItem event={data.event}/>\r\n   \r\n}\r\n\r\nexport default EventsDetailPage;\r\n\r\nexport async function loader({request,params}){\r\n    const id = params.id;\r\n    const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n    console.log(response);\r\n    if(!response.ok){\r\n        throw new Response(JSON.stringify({message:'Coud not fetch',status:500}));\r\n    }else{\r\n        return response;\r\n    }\r\n    \r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,gBAAgBA,CAAA,EAAE;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5B,oBAAOG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE1C;AAACN,EAAA,CAJQD,gBAAgB;EAAA,QACRJ,aAAa;AAAA;AAAAY,EAAA,GADrBR,gBAAgB;AAMzB,eAAeA,gBAAgB;AAE/B,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAC1C,MAAMC,EAAE,GAAGD,MAAM,CAACC,EAAE;EACpB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAClEG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrB,IAAG,CAACA,QAAQ,CAACI,EAAE,EAAC;IACZ,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAACC,OAAO,EAAC,gBAAgB;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC,CAAC;EAC7E,CAAC,MAAI;IACD,OAAOT,QAAQ;EACnB;AAEJ;AAAC,IAAAL,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}