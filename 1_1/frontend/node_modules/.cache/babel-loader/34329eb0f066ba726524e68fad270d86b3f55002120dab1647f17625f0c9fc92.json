{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\epizot22\\\\1_1\\\\frontend\\\\src\\\\pages\\\\NewEventPage.js\";\nimport { redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch(\"http://localhost:8080/events/\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Coud not fetch event',\n      status: 500\n    }));\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","status","ok","Response","message","$RefreshReg$"],"sources":["D:/React/epizot22/1_1/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { redirect } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nfunction NewEventPage(){\r\n    \r\n    return <EventForm/>;\r\n}\r\n\r\nexport default NewEventPage;\r\n\r\nexport async function action({request,params}){\r\n    const data = await request.formData();\r\n\r\n    const eventData = {\r\n        title:data.get('title'),\r\n        image:data.get('image'),\r\n        date:data.get('date'),\r\n        description:data.get('description'),\r\n    };\r\n    const response = await fetch(\"http://localhost:8080/events/\",{\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify(eventData)\r\n});\r\n\r\nif(response.status === 422){\r\n    return response;\r\n}\r\n\r\nif(!response.ok){\r\n   throw new Response(JSON.stringify({message:'Coud not fetch event',status:500}));\r\n    }\r\nreturn redirect('/events');    \r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAE;EAEnB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACvB;AAACC,EAAA,GAHQL,YAAY;AAKrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAC1C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAACH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBC,KAAK,EAACL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBE,IAAI,EAACN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACrBG,WAAW,EAACP,IAAI,CAACI,GAAG,CAAC,aAAa;EACtC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAC;IACzDC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACZ,SAAS;EACrC,CAAC,CAAC;EAEF,IAAGM,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;IACvB,OAAOP,QAAQ;EACnB;EAEA,IAAG,CAACA,QAAQ,CAACQ,EAAE,EAAC;IACb,MAAM,IAAIC,QAAQ,CAACJ,IAAI,CAACC,SAAS,CAAC;MAACI,OAAO,EAAC,sBAAsB;MAACH,MAAM,EAAC;IAAG,CAAC,CAAC,CAAC;EAC9E;EACJ,OAAO5B,QAAQ,CAAC,SAAS,CAAC;AAC1B;AAAC,IAAAS,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}